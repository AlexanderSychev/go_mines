package flow

import (
	"fmt"
	"time"
)

// ---------------------------------------------------------------------------------------------------------------------
// "FlowError' type definition
// ---------------------------------------------------------------------------------------------------------------------

type Error struct {
	When    time.Time
	Name    string
	Message string
}

// ---------------------------------------------------------------------------------------------------------------------
// "FlowError" type methods
// ---------------------------------------------------------------------------------------------------------------------

func (err Error) Error() string {
	return fmt.Sprintf("[%s] %s error: %s", err.When.Format(time.UnixDate), err.Name, err.Message)
}

// ---------------------------------------------------------------------------------------------------------------------
// "FlowError" type construction functions
// ---------------------------------------------------------------------------------------------------------------------

func NewError(name string, message string) Error {
	return Error{
		When:    time.Now(),
		Name:    name,
		Message: message,
	}
}

// ---------------------------------------------------------------------------------------------------------------------
// "FlowError" type additional functions
// ---------------------------------------------------------------------------------------------------------------------

func IsFlowError(err error) bool {
	_, isFlowError := err.(Error)
	return isFlowError
}
